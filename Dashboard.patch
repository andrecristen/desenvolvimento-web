Subject: [PATCH] Dashboard
---
Index: projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/response/DashboardResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/response/DashboardResponse.java b/GitHub/desenvolvimento-web/backend/src/main/java/com/trabalho/response/DashboardResponse.java
new file mode 100644
--- /dev/null	(date 1684451439726)
+++ f/desenvolvimento-web/backend/src/main/java/com/trabalho/response/DashboardResponse.java	(date 1684451439726)
@@ -0,0 +1,32 @@
+package com.trabalho.response;
+
+import com.trabalho.model.Produto;
+
+public class DashboardResponse {
+
+    Produto produto;
+
+    long quantidade;
+
+    public DashboardResponse(Produto produto, long quantidade) {
+        this.produto = produto;
+        this.quantidade = quantidade;
+    }
+
+    public Produto getProduto() {
+        return produto;
+    }
+
+    public void setProduto(Produto produto) {
+        this.produto = produto;
+    }
+
+    public long getQuantidade() {
+        return quantidade;
+    }
+
+    public void setQuantidade(long quantidade) {
+        this.quantidade = quantidade;
+    }
+
+}
Index: GitHub/desenvolvimento-web/backend/src/main/java/com/trabalho/controller/PedidoController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/controller/PedidoController.java b/GitHub/desenvolvimento-web/backend/src/main/java/com/trabalho/controller/PedidoController.java
--- f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/controller/PedidoController.java	(revision dfe77a8593d39fed266428876704ccc80588bcbe)
+++ f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/controller/PedidoController.java	(date 1684451532133)
@@ -6,6 +6,7 @@
 import com.trabalho.repository.ProdutoDerivacaoRepository;
 import com.trabalho.repository.UsuarioRepository;
 import com.trabalho.request.PedidoRequest;
+import com.trabalho.response.DashboardResponse;
 import com.trabalho.response.MessageResponse;
 import com.trabalho.response.ParamResponse;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -36,6 +37,11 @@
         this.transactionManager = transactionManager;
     }
 
+    @GetMapping("/pedidos/dashboard")
+    public List<DashboardResponse> dashboard() {
+        return pedidoProdutoRepository.getDashboard();
+    }
+
     @GetMapping("/pedidos/{token}")
     public MessageResponse findById(@PathVariable String token) {
         MessageResponse message;
Index: GitHub/desenvolvimento-web/frontend/src/contexts/admin.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git f/projetos/desenvolvimento-web/frontend/src/contexts/admin.jsx b/GitHub/desenvolvimento-web/frontend/src/contexts/admin.jsx
--- f/projetos/desenvolvimento-web/frontend/src/contexts/admin.jsx	(revision dfe77a8593d39fed266428876704ccc80588bcbe)
+++ f/projetos/desenvolvimento-web/frontend/src/contexts/admin.jsx	(date 1684452272874)
@@ -3,7 +3,7 @@
 import { useNavigate } from "react-router-dom"
 
 import { auth, getProdutosRequest, getProdutoDerivacoesRequest } from "../services/api-public"
-import { addProdutoRequest, editProdutoRequest } from "../services/api-admin"
+import { addProdutoRequest, editProdutoRequest, getDashboardRequest } from "../services/api-admin"
 import { PublicContext } from "./public";
 import User from "../models/User";
 import { errorMessage, successMessage } from "../components/UI/notify";
@@ -70,6 +70,15 @@
         }
     }
 
+    const getDashboard = async () => {
+        const response = await getDashboardRequest();
+        if (response && response.status && response.status == 200 && response.data) {
+            return response.data;
+        } else {
+            errorMessage('Não foi possível alterar o produto');
+        }
+    }
+
     return (
         <AdminContext.Provider
             value={{
@@ -78,7 +87,8 @@
                 getProdutos,
                 getProdutoDerivacoes,
                 addProduto,
-                editProduto
+                editProduto,
+                getDashboard
             }}>
             {children}
         </AdminContext.Provider>
Index: GitHub/desenvolvimento-web/frontend/src/pages/Admin/AdminHome/index.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git f/projetos/desenvolvimento-web/frontend/src/pages/Admin/AdminHome/index.jsx b/GitHub/desenvolvimento-web/frontend/src/pages/Admin/AdminHome/index.jsx
--- f/projetos/desenvolvimento-web/frontend/src/pages/Admin/AdminHome/index.jsx	(revision dfe77a8593d39fed266428876704ccc80588bcbe)
+++ f/projetos/desenvolvimento-web/frontend/src/pages/Admin/AdminHome/index.jsx	(date 1684452708616)
@@ -1,13 +1,49 @@
 import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
 import Render from "../../../components/Admin/Render";
 import { faBug } from "@fortawesome/free-solid-svg-icons";
+import { useContext, useEffect, useState } from "react";
+import { AdminContext } from "../../../contexts/admin";
 
 const AdminHomePage = function () {
 
+    const { getDashboard } = useContext(AdminContext);
+    const [dashboard, setDashboard] = useState([]);
+
+    useEffect(() => {
+        load();
+    }, []);
+
+    const load = () => {
+        setDashboard([]);
+        getDashboard().then((data) => {
+            setDashboard(data);
+        }).catch((exc) => {
+            console.log(exc);
+        });
+    }
+
     return (
         <Render>
-            <h1>Teste</h1>
-            <FontAwesomeIcon icon={faBug}></FontAwesomeIcon>
+            <h1>Produtos Mais Vendidos</h1>
+            <table className="table">
+                <thead className="thead-dark">
+                    <tr>
+                        <th scope="col">#</th>
+                        <th scope="col">Nome</th>
+                        <th scope="col">Vendas</th>
+                    </tr>
+                </thead>
+                <tbody>
+                    {dashboard && dashboard.map(dashboard => {
+                        return (
+                            <tr>
+                                <th>{dashboard.produto.id}</th>
+                                <td>{dashboard.produto.nome}</td>
+                                <td>{dashboard.quantidade}</td>
+                            </tr>);
+                    })}
+                </tbody>
+            </table>
         </Render>
     )
 }
Index: GitHub/desenvolvimento-web/frontend/src/services/api-admin.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git f/projetos/desenvolvimento-web/frontend/src/services/api-admin.js b/GitHub/desenvolvimento-web/frontend/src/services/api-admin.js
--- f/projetos/desenvolvimento-web/frontend/src/services/api-admin.js	(revision dfe77a8593d39fed266428876704ccc80588bcbe)
+++ f/projetos/desenvolvimento-web/frontend/src/services/api-admin.js	(date 1684452279484)
@@ -18,4 +18,12 @@
         .catch((error) => {
             return error.response;
         });
+}
+
+export const getDashboardRequest = async () => {
+    return api.get('/pedidos/dashboard').then((result) => {
+        return result;
+    }).catch((error) => {
+        return error.response;
+    });
 }
\ No newline at end of file
Index: GitHub/desenvolvimento-web/backend/src/main/java/com/trabalho/repository/PedidoProdutoRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/repository/PedidoProdutoRepository.java b/GitHub/desenvolvimento-web/backend/src/main/java/com/trabalho/repository/PedidoProdutoRepository.java
--- f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/repository/PedidoProdutoRepository.java	(revision dfe77a8593d39fed266428876704ccc80588bcbe)
+++ f/projetos/desenvolvimento-web/backend/src/main/java/com/trabalho/repository/PedidoProdutoRepository.java	(date 1684452927502)
@@ -1,7 +1,20 @@
 package com.trabalho.repository;
 
 import com.trabalho.model.PedidoProduto;
+import com.trabalho.response.DashboardResponse;
 import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+
+import java.util.List;
 
 public interface PedidoProdutoRepository extends JpaRepository<PedidoProduto, Long> {
+
+    @Query("SELECT new com.trabalho.response.DashboardResponse(produto, sum(pedidoProduto.quantidade))" +
+            "FROM PedidoProduto pedidoProduto " +
+            "JOIN ProdutoDerivacao produtoDerivacao ON produtoDerivacao = pedidoProduto.produtoDerivacao " +
+            "JOIN Produto produto ON  produtoDerivacao.produto = produto " +
+            "GROUP BY produto.id " +
+            "ORDER BY sum(pedidoProduto.quantidade) DESC")
+    List<DashboardResponse> getDashboard();
+
 }
